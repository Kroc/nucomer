; the main menu page, i.e. the front-page / directory of the magazine

; theme colours
MENU_BORDER     = BLACK
MENU_FORE       = BLACK
MENU_BACK       = LTGREY

; the address of the menu database is placed in the zero-page
; for some addressing mode shenanigans
!addr   ZP_MENU_DB              = $10
!addr   ZP_MENU_DB_LO           = $10
!addr   ZP_MENU_DB_HI           = $11
; currently selected menu item
!addr   ZP_MENU_INDEX           = $12

;===============================================================================
; table of interrupts to use for the menu screen:
;
menu_irqs:
       +irqs_table_item menu_irq_vblank,        SCANLINE_VBLANK_BEGIN
       +irqs_table_item menu_irq_logo_end,      SCANLINE_VBLANK_END + (3 * 8)-1
       +irqs_table_item menu_irq_logo,          SCANLINE_VBLANK_END + (2 * 8)-1
       +irqs_table_item menu_irq_logo,          SCANLINE_VBLANK_END + (1 * 8)-1

menu_irq_logo:
        ;-----------------------------------------------------------------------
        ; manually, and very badly, stabilise the raster
        ; by wasting enough time to get to the flyback
        ldx # 2
-       dex
        bne -

        lda # DKGREY
        sta VIC_BORDER

        ; now kill enough time for a whole line
        ldx # 12
-       dex
        bne -

        ; go back to black
        stx VIC_BORDER

        rts

menu_irq_logo_end:
        ;-----------------------------------------------------------------------
        ; manually, and very badly, stabilise the raster
        ; by wasting enough time to get to the flyback
        ldx # 2
-       dex
        bne -
        
        lda # DKGREY
        sta VIC_BORDER
        lda # LTGREY
        sta VIC_BACKGROUND

        ; now kill enough time for a whole line
        ldx # 11
-       dex
        bne -
        ; go back to black
        stx VIC_BORDER

        ; now kill enough time for a whole line
        ldx # 3
-       dex
        bne -

        lda # LTGREY
        sta VIC_BORDER

        rts

menu_irq_vblank:
        ;-----------------------------------------------------------------------
        ; manually, and very badly, stabilise the raster
        ; by wasting enough time to get to the flyback
        ldx # 2
-       dex
        bne -
        
        lda # MENU_BORDER
        sta VIC_BORDER
        sta VIC_BACKGROUND
        rts

;===============================================================================
menu_screen:
        ; setup the screen:
        ;-----------------------------------------------------------------------
        ; turn the screen off whilst we clear it
        lda # %00001000
        sta VIC_SCREEN_CTL1
        
        ; set our own interrupt handlers
        ; A = address of IRQ table, lo-byte
        ; X = address of IRQ table, hi-byte
        ; Y = number of entries in the table (1-based)
        ;
        lda #< menu_irqs
        ldx #> menu_irqs
        ldy # 4
        jsr irqs_load

        ; set screen colour
        lda # MENU_BORDER
        sta VIC_BORDER
        lda # MENU_BACK
        sta VIC_BACKGROUND

        ; erase the text-screen
        lda # MENU_FORE
        jsr clear_screen

        ; print logo:
        ;-----------------------------------------------------------------------
        ; print the logo with the base colour;
        ; we're going to recolour just the letters
        lda # DKGREY
        sta ZP_PRINT_COLOR
       +print_str_pos       menu_petscii_logo

        ; begin at the end of the logo and work backwards
        ; (easier for loop management to count toward 0)
        ldy # (3 * 40)
        ldx # BLUE      ; colour of letters

-       dey
        bmi +           ; finished?

        lda $0400, y    ; read a character from the logo
        cmp # $64       ; is the character a background-line?
        beq -           ; yes, skip it and don't change the colour
        txa
        sta $d800, y
        bpl -           ; (always branches)

+       lda # BLACK
        sta ZP_PRINT_COLOR
        
        ldx # 40
        lda # $63
-       dex
        sta $0400 + (3 * 40), x
        bne -

       +print_str_pos   menu_subline

        ; print menu items:
        ;-----------------------------------------------------------------------
        lda # 0                 ; begin at the first menu item
        sta ZP_MENU_INDEX
        tay
        ; set the address of the menu database
        lda #< menu_db
        sta ZP_MENU_DB_LO
        lda #> menu_db
        sta ZP_MENU_DB_HI

        ; from that read the offset of the menu item in the database
        clc
-       lda (ZP_MENU_DB_LO), y
        bmi +
        lda ZP_MENU_DB_LO
        adc (ZP_MENU_DB), y
        tax
        lda ZP_MENU_DB_HI
        iny
        adc (ZP_MENU_DB), y
                iny
        jsr print_str_pos
        bne -
+
        ;-----------------------------------------------------------------------
        ; turn screen on
        lda # %00011011
        sta VIC_SCREEN_CTL1
       
        jmp *

        ; tear down the custom interrupt handlers
        jsr disable_interrupts
        rts

menu_petscii_logo:
;===============================================================================
        !byte   0, 0
!ct "build/petscii_font.ct" {
        !text   " ---- =  = ---- ---- ----- ---- ----    "
        !text   " #  # #  # #    #  # # # # #___ #       "
        !text   " #  # #__# #___ #__# # # # #___ #       ", 0
}
menu_subline:
        !byte   4, 31
        !scr    "issue #0", 0

thorne:
        !scr    $db, 0

menu_db:
;===============================================================================
!binary "build/menu.db"
