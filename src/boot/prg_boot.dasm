; n√ºcomer diskzine (c) copyright Kroc Camen 2019-2023. unless otherwise noted,
; licenced under Creative Commons Attribution Non-Commercial Share-Alike 4.0
; licence; you may reuse and modify this code how you please as long as you:
;
; - retain the copyright notice
; - use the same licence for your derived code
; - do not use it for commercial purposes
;   (contact the author for a commercial licence)
;
;===============================================================================
        processor 6502

        ; use the program address passed in from the build script
        IFNCONST NU_ADDR_BOOT
                ECHO "NU_ADDR_BOOT undefined!"
                ERR
        ENDIF

        org NU_ADDR_BOOT

        ; configure the fastloader
        ; (use defaults from the source)
        include loader/config.s

        ; the fast-loader will remain in memory whilst the initialisation
        ; routine that detects drives and uploads code can be discarded.
        ; therefore we place the loader first in the program to provide
        ; fixed, known addresses for its API
        ;
start:  jmp chain               ; jump over resident fast-loader to init code

fastload_bin:
        ;=======================================================================
        ; Load unpacked file with specified load address
        ;
        ; Parameters: A filenumber, X/Y load address
        ; Returns: C=0 if OK, C=1 if failed to load
        ; Modifies: A,X,Y,zpDestLo-Hi
        ;
        jmp LoadUnpackedRaw

fastload_prg:
        ;=======================================================================
        ; Load unpacked file with load address from 2 first bytes of file
        ;
        ; Parameters: A filenumber
        ; Returns: C=0 if OK, C=1 if failed to load
        ; Modifies: A,X,Y,zpDestLo-Hi
        ;
        jmp LoadUnpacked

fastload_exo:
        ;=======================================================================
        ; Depack from file stream packed with Exomizer 3 raw forward mode
        ;
        ; Parameters: A filenumber, X/Y load address
        ; Returns: C=0 if OK, C=1 if failed to load
        ; Modifies: A,X,Y,depacker ZP vars
        ;
        jmp LoadExomizer3Raw

        ;-----------------------------------------------------------------------
        ; this is the runtime fast-loader code:
        include loader/loader.s

        ; add routines for loading compressed (Exomizer3) files:
        include loader/loadexomizer3.s

        ; add routines for loading unpacked (uncompressed) files:
        include loader/loadunpacked.s

        ; fast-load the logo splash-escreen:
chain:  ;=======================================================================
        clc
        jsr InitLoader

        lda #$c1                ; filename prefix of logo, i.e. "C1.LOGO"
        ldx #<$8000
        ldy #>$8000
        jsr LoadExomizer3Raw    ; fastload file C1
        bcs err                 ; error if carry set

        jmp $8000

err:    dc.b $02
        rts

        ; include the once-off fast-loader initialisation:
        ;=======================================================================
depackBuffer:
        include loader/loaderinit.s

