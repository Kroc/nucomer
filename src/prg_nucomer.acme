; nÃ¼comer magazine (c) copyright Kroc Camen 2019. unless otherwise noted,
; licenced under Creative Commons Attribution Non-Commercial Share-Alike 4.0
; licence; you may reuse and modify this code how you please as long as you:
;
; - retain the copyright notice
; - use the same licence for your derived code
; - do not use it for commercial purposes
;   (contact the author for a commercial licence)
;
;===============================================================================
!source "c64/c64.acme"
!source "config.acme"           ; nucomer constants for memory layout

* = nu_main

;===============================================================================
; NOTE: exomizer includes BSOD64 in the payload, so we don't need to
;       manually load it from the outfit. TODO: load an exomized BSOD64
;       file using the IRQ fast-loader during some off-time (menu-screen?)
;
init:   ; setup screen:
        ;-----------------------------------------------------------------------
        ; turn the screen off whilst we fiddle with the VIC settings
        lda # %00000000
        sta VIC_SCREEN_CTL1

        ; change the VIC bank to $C000-$FFFF.
        ; note that BSOD64 will occupy $C000-$DFFF
        ;
        ldx CIA2_PORTA_DDR      ; (backup current value)
        lda # %00000111         ; we only want to write to the low 3-bits
        sta CIA2_PORTA_DDR      ; set the port's read/write state
        ;
        ; the bit value is the inverse of the bank number 0-3
        lda # (! NU_VIC_BANK) & %111
        sta CIA2_PORTA          ; change VIC bank

        ; we must restore the read/write state of the port
        ; or disk I/O will break!
        stx CIA2_PORTA_DDR

        ; change the VIC memory layout to position the text-screen & font
        lda # ((>nu_screen & %00111100) << 2) | ((>nu_font & %00111000) >> 2)
        sta VIC_LAYOUT

        ; start menu screen:
        ;-----------------------------------------------------------------------
        jsr irqs_init

        ; turn off BASIC & KERNAL ROM,
        ; leave I/O on (BSOD64 will be under there)
        dec CPU_CONTROL
        dec CPU_CONTROL
        
        jsr menu_screen         ; from here, there is no going back...
        
        ; halt and catch fire
        jmp *

;===============================================================================
!source "interrupts.acme"

!source "print.acme"            ; global string-printing routines
!source "keyboard.acme"

!source "menu.acme"
!source "read.acme"

